name: "monitoring"

services:
  prometheus:
    image: prom/prometheus:v3.4.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/rules:/etc/prometheus/rules
      - ./prometheus/files_sd:/etc/prometheus/files_sd
      - ./prometheus/web.yml:/etc/prometheus/web.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.config.file=/etc/prometheus/web.yml'
    restart: unless-stopped
    networks:
      - external_network

  node_exporter:
    image: prom/node-exporter:v1.9.1
    container_name: node_exporter
    ports:
      - 9100:9100
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.rootfs=/rootfs'
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    restart: unless-stopped
    networks:
      - external_network

  shoehub:
    image: aussiearef/shoehub:latest
    container_name: shoehub
    ports:
      - 8080:8080
    environment:
      - JAVA_OPTS=-Xmx512m
    restart: unless-stopped
    networks:
      - external_network

  grafana:
    image: grafana/grafana:12.0.1
    container_name: grafana
    hostname: grafana
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      # - ./grafana/provisioning/:/etc/grafana/provisioning/
    # env_file:
    #   - ./grafana/config.monitoring
    restart: always
    networks:
      - external_network
  
  loki:
    image: grafana/loki:3.5
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki/loki-config.yaml:/etc/loki/loki-config.yaml
    command: -config.file=/etc/loki/loki-config.yaml
    restart: unless-stopped
    networks:
      - external_network

  promtail:
    image: grafana/promtail:3.5-amd64
    container_name: promtail
    volumes:
      - ./promtail/promtail-config.yaml:/etc/promtail/config.yml
      - ./log:/var/log
    command: -config.file=/etc/promtail/config.yml
    # healthcheck:
    #   test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9080/ready"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 3
    restart: unless-stopped
    networks:
      - external_network


networks:
  external_network:
    name: external_network
    external: true


volumes:
  prometheus_data: {}
  grafana_data: {}